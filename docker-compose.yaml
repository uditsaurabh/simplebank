# docker compose up -d 
# docker-compose down
version: '3.9'
services:
  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: udit
      POSTGRES_PASSWORD: root
      POSTGRES_DB: jobber_reviews
  
  
  #redis:
  #  container_name: redis_container
  #  image: redis:alpine
  #  restart: always
  #  ports:
  #    - 6378:6379
  #  volumes:
  #    - ./docker-volumes/cache:/data
  
  #mongodb:
  #  container_name: mongo_container
  #  image: mongo:latest
  #  restart: always
  #  ports:
  #    - '27017:27017'
  #  volumes:
  #    - ./docker-volumes/data:/data/db

  #myql:
  #  container_name: mysql_container
  #  image: mysql:latest
  #  restart: always
  #  command: 
  #    --default-authentication-plugin=mysql_native_password
  #  ports:
  #    - '3306:3306'
  #  volumes:
  #    - ./docker-volumes/mysql:/var/lib/mysql
  #  environment:
  #    MYSQL_ROOT_PASSWORD: root
  #    MYSQL_DATABASE: jobber_auth
  #    MYSQL_USER: udit
  #    MYSQL_PASSWORD: root

  
  #rabbitmq:
  #  container_name: rabbitmq_container
  #  image: rabbitmq:3.13-rc-management-alpine
  #  restart: always
  #  ports:
      # AMPQ protocol port
  #    - '5672:5672'
      # Management UI
  #    - '15672:15672'

  #elasticsearch:
  #  container_name: elasticsearch_container
  #  image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
  #  restart: always
  #  ports:
  #    - '9200:9200'
  #    - '9300:9300'
  #  environment:
  #      discovery.type: single-node
  #      bootstrap.memory_lock: "true"
  #      ES_JAVA_OPTS: -Xms512m -Xmx512m
        # disabling security
  #      xpack.security.enabled: "false"
        # montioring on Kibana
  #      xpack.security.authc.api_key.enabled: "true"
  #      xpack.monitoring.collection.enabled: "true"
  #      xpack.security.enrollment.enabled: "true"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  volumes:
  #    - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
  #  networks:
  #    - elastic
  
  #Kibana:
  #  container_name: kibana_container
  #  image: docker.elastic.co/kibana/kibana:8.13.2
  #  restart: always
  #  ports:
  #    - 5601:5601
  #  environment:
  #    ELASTICSEARCH_HOSTS: http://elasticsearch_container:9200
  #  networks:
  #    - elastic
  #  volumes:
  #    - ./kibana.yml/:/usr/share/kibana/config/kibana.yml

networks:
  elastic:
    name: elastic